apply plugin: 'com.android.library'

version "1.0.8"

android {
    signingConfigs {
        config {
            keyAlias KEY_NAME
            keyPassword KEY_PW
            storeFile file(KEY_PATH)
            storePassword PW
        }
    }
    compileSdkVersion 23
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 23
        versionCode 1
        versionName version

        externalNativeBuild {
            cmake {
                abiFilters "armeabi-v7a","x86"
                cppFlags "-frtti -fexceptions"
            }
        }
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            debuggable true

            buildConfigField "boolean", "LOG_FLAG", "true"
            buildConfigField "String", "TAG", "\"ECSparkLiveKit\""
        }

        release {
            minifyEnabled false
            debuggable false
            buildConfigField "boolean", "LOG_FLAG", "false"
            buildConfigField "String", "TAG", "\"ECSparkLiveKit\""
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    sourceSets { main { res.srcDirs = ['src/main/res', 'src/main/res/xml'] } }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:23.4.0'
    implementation 'com.android.support:support-v4:23.4.0'
    implementation 'junit:junit:4.12'
    implementation project(':common')
}

task clearJar(type: Delete) {
    delete 'build/outputs/ECSparkLiveKit-' + version + '.jar'
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/outputs/')
    include('classes.jar')
    rename('classes.jar', 'ECSparkLiveKit-' + version + '.jar')
}


makeJar.dependsOn(clearJar, build)